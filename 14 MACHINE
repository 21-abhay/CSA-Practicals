<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Q14 MACHINE" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="I" type="required" numBits="1" relativity="absolute" signed="false" defaultValue="0" id="model.Field1ccd5e08">
	</Field>
	<Field name="OP16" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field1ef31e8">
	</Field>
	<Field name="ADDR12" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field4a703329">
	</Field>
	<Field name="OP3" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field37eb2ff5">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register41200a1e" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register39b803a3" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register721a96c6" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register1ce08bf7" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register5d51028f" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register240da79d" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register207a97c" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register1aa035f8" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register4fb01959" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register6c87e7d" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register393b6b91" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="E" bit="0" register="model.module.Register1ce08bf7" halt="false" id="model.module.ConditionBit22af96bb" />
	<ConditionBit name="S" bit="0" register="model.module.Register6c87e7d" halt="true" id="model.module.ConditionBit6d9a2966" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM2864993e" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register41200a1e" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet18a91cc5" />
	<Set name="E&lt;-0" register="model.module.Register1ce08bf7" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet133ee1cf" />
	<Set name="S&lt;-1" register="model.module.Register6c87e7d" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet622cb398" />

	<!--............. test ..........................-->
	<Test name="IF AC(15)=0" register="model.module.Register41200a1e" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test66cba24d" />
	<Test name="IF AC(15)=1" register="model.module.Register41200a1e" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test617c6d7f" />
	<Test name="IF AC=0" register="model.module.Register41200a1e" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test307a048b" />
	<Test name="IF DR=0" register="model.module.Register721a96c6" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4a458c87" />
	<Test name="IF E=0" register="model.module.Register1ce08bf7" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test71a78648" />
	<Test name="IF I(0)=0" register="model.module.Register5d51028f" start="0" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test73321a96" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register41200a1e" delta="1" id="model.microinstruction.Increment138c1627" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register39b803a3" delta="1" id="model.microinstruction.Increment754b9165" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register721a96c6" delta="1" id="model.microinstruction.Increment3813cc42" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register4fb01959" delta="1" id="model.microinstruction.Increment5b16977c" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-SHL AC" type="logical" source="model.module.Register41200a1e" destination="model.module.Register41200a1e" direction="left" distance="1" id="model.microinstruction.Shift27665e68" />
	<Shift name="AC&lt;-SHR AC" type="logical" source="model.module.Register41200a1e" destination="model.module.Register41200a1e" direction="right" distance="1" id="model.microinstruction.Shift4824908f" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register41200a1e" source2="model.module.Register41200a1e" destination="model.module.Register41200a1e" id="model.microinstruction.Logical3fc9c8aa" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register41200a1e" source2="model.module.Register721a96c6" destination="model.module.Register41200a1e" id="model.microinstruction.Logical53059734" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register1ce08bf7" source2="model.module.Register1ce08bf7" destination="model.module.Register1ce08bf7" id="model.microinstruction.Logical37fc46a9" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR, E&lt;-COUT" type="ADD" source1="model.module.Register41200a1e" source2="model.module.Register721a96c6" destination="model.module.Register41200a1e" carryBit="model.module.ConditionBit22af96bb" id="model.microinstruction.Arithmetic5761c3bd" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register1ce08bf7" srcStartBit="0" dest="model.module.Register41200a1e" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoRcc39e2f" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register1ce08bf7" srcStartBit="0" dest="model.module.Register41200a1e" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR5566d821" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register721a96c6" srcStartBit="0" dest="model.module.Register41200a1e" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR15d1703b" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register207a97c" srcStartBit="0" dest="model.module.Register39b803a3" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR36b87278" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register4fb01959" srcStartBit="0" dest="model.module.Register39b803a3" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR261ab066" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Register41200a1e" srcStartBit="0" dest="model.module.Register1ce08bf7" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR45dec354" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register41200a1e" srcStartBit="15" dest="model.module.Register1ce08bf7" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR5b90337c" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register39b803a3" srcStartBit="0" dest="model.module.Register4fb01959" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR2ecea1c4" />
	<TransferRtoR name="TR(0)&lt;-AC(0)" source="model.module.Register41200a1e" srcStartBit="0" dest="model.module.Register393b6b91" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR5da4bdfb" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Register207a97c" id="model.microinstruction.Decode6f9983c8" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register41200a1e" connection="[Console]" id="model.microinstruction.IO4304a968" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register41200a1e" connection="[Console]" id="model.microinstruction.IO60a0e503" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM2864993e" data="model.module.Register39b803a3" address="model.module.Register39b803a3" id="model.microinstruction.MemoryAccess224dde2a" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM2864993e" data="model.module.Register721a96c6" address="model.module.Register39b803a3" id="model.microinstruction.MemoryAccess66d2e2f9" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM2864993e" data="model.module.Register207a97c" address="model.module.Register39b803a3" id="model.microinstruction.MemoryAccessfb58a2" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM2864993e" data="model.module.Register41200a1e" address="model.module.Register39b803a3" id="model.microinstruction.MemoryAccess67143d43" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM2864993e" data="model.module.Register721a96c6" address="model.module.Register39b803a3" id="model.microinstruction.MemoryAccess2be41305" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM2864993e" data="model.module.Register4fb01959" address="model.module.Register39b803a3" id="model.microinstruction.MemoryAccess5a50e9aa" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End34840a" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR261ab066" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessfb58a2" />
		<Microinstruction microRef="model.microinstruction.Increment5b16977c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR36b87278" />
		<Microinstruction microRef="model.microinstruction.Test73321a96" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess224dde2a" />
		<Microinstruction microRef="model.microinstruction.Decode6f9983c8" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#bfadc9" assemblyColors="#bfadc9" >
		<Microinstruction microRef="model.microinstruction.IO60a0e503" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a8ebfa" assemblyColors="#a8ebfa" >
		<Microinstruction microRef="model.microinstruction.IO4304a968" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#bdb88b" assemblyColors="#bdb88b" >
		<Microinstruction microRef="model.microinstruction.CpusimSet622cb398" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#b1a1fd" assemblyColors="#b1a1fd" >
		<Microinstruction microRef="model.microinstruction.Test71a78648" />
		<Microinstruction microRef="model.microinstruction.Increment5b16977c" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#b1a2a5" assemblyColors="#b1a2a5" >
		<Microinstruction microRef="model.microinstruction.Test307a048b" />
		<Microinstruction microRef="model.microinstruction.Increment5b16977c" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f28aab" assemblyColors="#f28aab" >
		<Microinstruction microRef="model.microinstruction.Test617c6d7f" />
		<Microinstruction microRef="model.microinstruction.Increment5b16977c" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#dcb8fb" assemblyColors="#dcb8fb" >
		<Microinstruction microRef="model.microinstruction.Test66cba24d" />
		<Microinstruction microRef="model.microinstruction.Increment5b16977c" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#bdcd89" assemblyColors="#bdcd89" >
		<Microinstruction microRef="model.microinstruction.Increment138c1627" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#e7d68e" assemblyColors="#e7d68e" >
		<Microinstruction microRef="model.microinstruction.Shift27665e68" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRcc39e2f" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5b90337c" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#dbf7a0" assemblyColors="#dbf7a0" >
		<Microinstruction microRef="model.microinstruction.Shift4824908f" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5566d821" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR45dec354" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f4abd9" assemblyColors="#f4abd9" >
		<Microinstruction microRef="model.microinstruction.Logical37fc46a9" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#b0eb99" assemblyColors="#b0eb99" >
		<Microinstruction microRef="model.microinstruction.Logical3fc9c8aa" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#9bb4ac" assemblyColors="#9bb4ac" >
		<Microinstruction microRef="model.microinstruction.CpusimSet133ee1cf" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#dbe293" assemblyColors="#dbe293" >
		<Microinstruction microRef="model.microinstruction.CpusimSet18a91cc5" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#f298ee #84a492 #c9a0dd" assemblyColors="#f298ee #84a492 #c9a0dd" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess66d2e2f9" />
		<Microinstruction microRef="model.microinstruction.Increment3813cc42" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2be41305" />
		<Microinstruction microRef="model.microinstruction.Test4a458c87" />
		<Microinstruction microRef="model.microinstruction.Increment5b16977c" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#879386 #98c7f9 #fbcfec" assemblyColors="#879386 #98c7f9 #fbcfec" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5a50e9aa" />
		<Microinstruction microRef="model.microinstruction.Increment754b9165" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2ecea1c4" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#f5d8d0 #f2cabc #9bbdea" assemblyColors="#f5d8d0 #f2cabc #9bbdea" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2ecea1c4" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#a2a6bb #da9d82 #eda6cc" assemblyColors="#a2a6bb #da9d82 #eda6cc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess67143d43" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#b9c3b6 #8ab4e7 #e3a8e7" assemblyColors="#b9c3b6 #8ab4e7 #e3a8e7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess66d2e2f9" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR15d1703b" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#b5fba0 #ebb4db #dcae9f" assemblyColors="#b5fba0 #ebb4db #dcae9f" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess66d2e2f9" />
		<Microinstruction microRef="model.microinstruction.Arithmetic5761c3bd" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP3 I ADDR12" assemblyFormat="OP3 I ADDR12" instructionColors="#b6d794 #8ca0b0 #ec91c7" assemblyColors="#b6d794 #8ca0b0 #ec91c7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess66d2e2f9" />
		<Microinstruction microRef="model.microinstruction.Logical53059734" />
		<Microinstruction microRef="model.microinstruction.End34840a" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM2864993e" startingAddress="38" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
